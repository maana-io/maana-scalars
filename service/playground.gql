# Write your query or mutation here
query BooleanTests {
  booleanIdentity(x: true)
  booleanParse(x: "false")
  booleanToString(x: true)
  booleanCoerceFromOpt
  booleanNot(x: false)
  booleanOr(a: false, b: false)
  booleanXor(a: true, b: true)
  booleanAnd(a: true, b: true)
  booleanListUnion(a: [true, false], b: [true, false])
  booleanListConcat(a: [true, false], b: [true, false])
  booleanListReverse(x: [true, false, true, false])
}
# Write your query or mutation here
query DateTests {
  dateIdentity(x: "12/2/2007")
  dateParse(x: "2007-12-03")
  dateToString(x: "2007-12-03")
  dateCoerceFromOpt
  dateListUnion(
    a: ["2007-12-03", "2007-12-04"]
    b: ["2007-12-03", "2007-12-05"]
  )
}

mutation DateTestsM {
  dateNow
}
mutation DateTimeTestsM {
  dateTimeNow
}
mutation TimeTestsM {
  timeNow
}

query FloatTests {
  floatParse(x: "3.14")
  floatToString(x: 3.14)
  floatListUnion(a: [1.0, 2.0, 3.0], b: [3.0, 4.0])
  floatListUnique(x: [1.0, 1.0, 1.0, 1.0])
  floatListFilterNulls(x: [1.0, null, null, 2.0])
  floatEqual(a: 5.0, b: 4.99999999)
  floatGreaterThan(x: 5.0, min: 4.9)
  floatLessThan(x: 5.0, max: 4.9)
}

query JsonTests {
  jsonParse(x: "{\"a\":[1,2,3]}")
  jsonToString(x: { a: [1, 2, 3] })
  jsonListUnion(a: [{ a: 1 }, { a: 2 }, { a: 3 }], b: [{ a: 3 }, { a: 4 }])
}

query IntTests {
  intParse(x: "3.14")
  intToString(x: 3)
  intListUnion(a: [1, 2, 3], b: [3, 4])
}

query StringTests {
  stringLength(x: "mary")
  stringReverse(x: "mary")
  stringReplace(source: "Every where Mary went", search: "Mary", replace: "Bob")
}

query DateSpanTests {
  dateSpanCoerceFromOpt {
    id
    start
    end
  }
}
