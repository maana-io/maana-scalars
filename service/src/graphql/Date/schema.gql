type Query {
  # Identity
  dateIdentity(x: Date!): Date!
  dateIdentityOpt(x: Date): Date

  # NONULL coercion
  dateCoerceFromOpt(x: Date): Date!
  dateCoerceToOpt(x: Date!): Date

  # String de/serialization
  dateParse(x: String!): Date!
  dateToString(x: Date!): String!

  # Lists
  dateListUnion(a: [Date!]!, b: [Date!]!): [Date!]!
  dateListConcat(a: [Date!]!, b: [Date!]!): [Date!]!
  dateListReverse(x: [Date!]!): [Date!]!
  dateListUnique(x: [Date!]!): [Date!]!
  dateListFilterNulls(x: [Date]): [Date!]!

  # Operations
}

type Mutation {
  # Operations
  dateNow: Date!
}
