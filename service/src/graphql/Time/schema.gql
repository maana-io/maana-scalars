type Query {
  # Identity
  timeIdentity(x: Time!): Time!
  timeIdentityOpt(x: Time): Time

  # NONULL coercion
  timeCoerceFromOpt(x: Time): Time!
  timeCoerceToOpt(x: Time!): Time

  # String de/serialization
  timeParse(x: String!): Time!
  timeToString(x: Time!): String!

  # Lists
  timeListUnion(a: [Time!]!, b: [Time!]!): [Time!]!
  timeListConcat(a: [Time!]!, b: [Time!]!): [Time!]!
  timeListReverse(x: [Time!]!): [Time!]!
  timeListUnique(x: [Time!]!): [Time!]!
  timeListFilterNulls(x: [Time]): [Time!]!

  # Operations
}

type Mutation {
  timeNow: Time!
}
