# source: https://stable.knowledge.maana.io:8443/service/05830e8d-a9af-42f3-a922-c76305c67e90/graphql
# timestamp: Tue Apr 30 2019 10:04:33 GMT-0700 (PDT)

"""Autogenerated input for adding instance of Country"""
input AddCountryInput {
  """id"""
  id: ID
  name: String
  localizedName: ID
}

"""Autogenerated input for adding instance of Language"""
input AddLanguageInput {
  """id"""
  id: ID
  localizedName: ID
  name: String
}

"""Autogenerated input for adding instance of LanguageTag"""
input AddLanguageTagInput {
  """id"""
  id: ID
  languageCode: ID
  country: ID
}

"""Autogenerated input for adding instance of LocalizedText"""
input AddLocalizedTextInput {
  """id"""
  id: ID
  languageTag: ID
  text: String!
}

enum AggregateOp {
  MIN
  MAX
  SUM
  COUNT
}

type Country {
  """id"""
  id: ID!
  name: String
  localizedName: LocalizedText
}

input CountryAsInput {
  id: ID!
  name: String
  localizedName: LocalizedTextAsInput
}

scalar Date

scalar DateTime

input FieldFilterInput {
  """one of the following is required"""
  fieldId: ID
  fieldName: String
  op: String!
  value: FieldValueInput!
}

input FieldProjectionInput {
  """one of the following is required - except in the case of count queries"""
  fieldId: ID
  fieldName: String

  """optional if omitted outer query is used"""
  alias: String
  op: AggregateOp
}

type FieldValue {
  """Types"""
  ID: ID
  STRING: String
  INT: Int
  FLOAT: Float
  BOOLEAN: Boolean
  DATE: Date
  TIME: Time
  DATETIME: DateTime
  JSON: JSON
  KIND: ID

  """List forms"""
  l_ID: [ID]
  l_STRING: [String]
  l_INT: [Int]
  l_FLOAT: [Float]
  l_BOOLEAN: [Boolean]
  l_DATE: [Date]
  l_TIME: [Time]
  l_DATETIME: [DateTime]
  l_JSON: [JSON]
  l_KIND: [ID]
}

input FieldValueInput {
  """Types"""
  ID: ID
  STRING: String
  INT: Int
  FLOAT: Float
  BOOLEAN: Boolean
  DATE: Date
  TIME: Time
  DATETIME: DateTime
  JSON: JSON
  KIND: ID

  """List forms"""
  l_ID: [ID]
  l_STRING: [String]
  l_INT: [Int]
  l_FLOAT: [Float]
  l_BOOLEAN: [Boolean]
  l_DATE: [Date]
  l_TIME: [Time]
  l_DATETIME: [DateTime]
  l_JSON: [JSON]
  l_KIND: [ID]
}

type Info {
  id: ID!
  name: String!
  description: String
}

type InstanceSet {
  kindId: ID!

  """Continuation token"""
  token: String
  fieldIds: [ID]

  """rowKeys: [Int]"""
  records: [[FieldValue]]
}

scalar JSON

input KindQueryInput {
  """projected kind (one of the following is required)"""
  kindId: ID
  kindName: String
  serviceId: ID

  """optional alias for projection binding"""
  alias: String

  """projected fields"""
  projection: [FieldProjectionInput]

  """distinct Projected result"""
  distinct: Boolean

  """filters (where)"""
  fieldFilters: [FieldFilterInput]

  """conjunction (where)"""
  and: [KindQueryInput]

  """disjunction (where)"""
  or: [KindQueryInput]

  """join (if conjunction or disjunction)"""
  fromFieldId: ID
  fromFieldName: String
  toFieldId: ID
  toFieldName: String
  take: Int
  token: String
}

type Language {
  """id"""
  id: ID!
  localizedName: LocalizedText
  name: String
}

input LanguageAsInput {
  id: ID!
  localizedName: LocalizedTextAsInput
  name: String
}

type LanguageTag {
  """id"""
  id: ID!
  languageCode: Language
  country: Country
}

input LanguageTagAsInput {
  id: ID!
  languageCode: LanguageAsInput
  country: CountryAsInput
}

type LanguageTagOutput {
  id: ID!
  languageCode: Language
  country: Country
}

type LocalizedText {
  """id"""
  id: ID!
  languageTag: LanguageTag
  text: String!
}

input LocalizedTextAsInput {
  id: ID!
  languageTag: LanguageTagAsInput
  text: String!
}

type Mutation {
  """Autogenerated mutation for adding single instance of LanguageTag"""
  addLanguageTag(input: AddLanguageTagInput!): ID

  """Autogenerated mutation for adding multiple instances of LanguageTag"""
  addLanguageTags(input: [AddLanguageTagInput]!): [ID]

  """Autogenerated mutation for updating single instance of LanguageTag"""
  updateLanguageTag(input: UpdateLanguageTagInput!): ID

  """Autogenerated mutation for updating multiple instance of LanguageTag"""
  updateLanguageTags(input: [UpdateLanguageTagInput]!): [ID]

  """Autogenerated mutation for deleting single instance of LanguageTag"""
  deleteLanguageTag(id: ID!): LanguageTag

  """Autogenerated mutation for deleting multiple instance of LanguageTag"""
  deleteLanguageTags(ids: [ID!]): [LanguageTag]

  """Autogenerated mutation for adding single instance of LocalizedText"""
  addLocalizedText(input: AddLocalizedTextInput!): ID

  """Autogenerated mutation for adding multiple instances of LocalizedText"""
  addLocalizedTexts(input: [AddLocalizedTextInput]!): [ID]

  """Autogenerated mutation for updating single instance of LocalizedText"""
  updateLocalizedText(input: UpdateLocalizedTextInput!): ID

  """Autogenerated mutation for updating multiple instance of LocalizedText"""
  updateLocalizedTexts(input: [UpdateLocalizedTextInput]!): [ID]

  """Autogenerated mutation for deleting single instance of LocalizedText"""
  deleteLocalizedText(id: ID!): LocalizedText

  """Autogenerated mutation for deleting multiple instance of LocalizedText"""
  deleteLocalizedTexts(ids: [ID!]): [LocalizedText]

  """Autogenerated mutation for adding single instance of Language"""
  addLanguage(input: AddLanguageInput!): ID

  """Autogenerated mutation for adding multiple instances of Language"""
  addLanguages(input: [AddLanguageInput]!): [ID]

  """Autogenerated mutation for updating single instance of Language"""
  updateLanguage(input: UpdateLanguageInput!): ID

  """Autogenerated mutation for updating multiple instance of Language"""
  updateLanguages(input: [UpdateLanguageInput]!): [ID]

  """Autogenerated mutation for deleting single instance of Language"""
  deleteLanguage(id: ID!): Language

  """Autogenerated mutation for deleting multiple instance of Language"""
  deleteLanguages(ids: [ID!]): [Language]

  """Autogenerated mutation for adding single instance of Country"""
  addCountry(input: AddCountryInput!): ID

  """Autogenerated mutation for adding multiple instances of Country"""
  addCountrys(input: [AddCountryInput]!): [ID]

  """Autogenerated mutation for updating single instance of Country"""
  updateCountry(input: UpdateCountryInput!): ID

  """Autogenerated mutation for updating multiple instance of Country"""
  updateCountrys(input: [UpdateCountryInput]!): [ID]

  """Autogenerated mutation for deleting single instance of Country"""
  deleteCountry(id: ID!): Country

  """Autogenerated mutation for deleting multiple instance of Country"""
  deleteCountrys(ids: [ID!]): [Country]
}

type Query {
  translateOneLocalized(localizedText: LocalizedTextAsInput!, targetLanguageTag: LanguageTagAsInput!): LocalizedText!
  translateMultipleLocalized(localizedTexts: [LocalizedTextAsInput!]!, targetLanguageTag: LanguageTagAsInput!): [LocalizedText!]!
  translateOne(text: String!, targetLanguageTag: LanguageTagAsInput!): LocalizedText!
  translateMultiple(texts: [String!]!, targetLanguageTag: LanguageTagAsInput!): [LocalizedText!]!
  CKGErrors: [String]

  """All instances of LanguageTag kind"""
  allLanguageTags(
    """Number of results to return"""
    take: Int = 1000

    """Number of results to skip from the query result. Applied before take"""
    offset: Int = 0
  ): [LanguageTag]

  """Get single instance of LanguageTag kind by ID"""
  languageTag(id: ID!): LanguageTag

  """Get list of instance of LanguageTag kind by IDs"""
  languageTags(ids: [ID]!): [LanguageTag]

  """Get instances of LanguageTag kind based on one or more field filters"""
  languageTagFilter(
    filters: [FieldFilterInput]!

    """Number of results to return"""
    take: Int = 1000

    """Number of results to skip from the query result. Applied before take"""
    offset: Int = 0
  ): [LanguageTag]

  """All instances of LocalizedText kind"""
  allLocalizedTexts(
    """Number of results to return"""
    take: Int = 1000

    """Number of results to skip from the query result. Applied before take"""
    offset: Int = 0
  ): [LocalizedText]

  """Get single instance of LocalizedText kind by ID"""
  localizedText(id: ID!): LocalizedText

  """Get list of instance of LocalizedText kind by IDs"""
  localizedTexts(ids: [ID]!): [LocalizedText]

  """Get instances of LocalizedText kind based on one or more field filters"""
  localizedTextFilter(
    filters: [FieldFilterInput]!

    """Number of results to return"""
    take: Int = 1000

    """Number of results to skip from the query result. Applied before take"""
    offset: Int = 0
  ): [LocalizedText]

  """All instances of Language kind"""
  allLanguages(
    """Number of results to return"""
    take: Int = 1000

    """Number of results to skip from the query result. Applied before take"""
    offset: Int = 0
  ): [Language]

  """Get single instance of Language kind by ID"""
  language(id: ID!): Language

  """Get list of instance of Language kind by IDs"""
  languages(ids: [ID]!): [Language]

  """Get instances of Language kind based on one or more field filters"""
  languageFilter(
    filters: [FieldFilterInput]!

    """Number of results to return"""
    take: Int = 1000

    """Number of results to skip from the query result. Applied before take"""
    offset: Int = 0
  ): [Language]

  """All instances of Country kind"""
  allCountrys(
    """Number of results to return"""
    take: Int = 1000

    """Number of results to skip from the query result. Applied before take"""
    offset: Int = 0
  ): [Country]

  """Get single instance of Country kind by ID"""
  country(id: ID!): Country

  """Get list of instance of Country kind by IDs"""
  countrys(ids: [ID]!): [Country]

  """Get instances of Country kind based on one or more field filters"""
  countryFilter(
    filters: [FieldFilterInput]!

    """Number of results to return"""
    take: Int = 1000

    """Number of results to skip from the query result. Applied before take"""
    offset: Int = 0
  ): [Country]

  """Mandatory service manifest."""
  info: Info!

  """Kind Query"""
  query(input: KindQueryInput!): InstanceSet
  queryJSON(input: KindQueryInput!): String
}

scalar Time

"""Autogenerated input for modifying instance of Country"""
input UpdateCountryInput {
  """id"""
  id: ID!
  name: String
  localizedName: ID
}

"""Autogenerated input for modifying instance of Language"""
input UpdateLanguageInput {
  """id"""
  id: ID!
  localizedName: ID
  name: String
}

"""Autogenerated input for modifying instance of LanguageTag"""
input UpdateLanguageTagInput {
  """id"""
  id: ID!
  languageCode: ID
  country: ID
}

"""Autogenerated input for modifying instance of LocalizedText"""
input UpdateLocalizedTextInput {
  """id"""
  id: ID!
  languageTag: ID
  text: String
}
