# source: https://stable.knowledge.maana.io:8443/service/ed3e41e1-1259-4dc5-9ef6-1a3fdba8a69c/graphql
# timestamp: Mon Apr 29 2019 09:34:26 GMT-0700 (PDT)

"""Autogenerated input for adding instance of UnitOfMeasure"""
input AddUnitOfMeasureInput {
  """id"""
  id: ID
  name: String
  displayAs: String
}

enum AggregateOp {
  MIN
  MAX
  SUM
  COUNT
}

scalar Date

scalar DateTime

input FieldFilterInput {
  """one of the following is required"""
  fieldId: ID
  fieldName: String
  op: String!
  value: FieldValueInput!
}

input FieldProjectionInput {
  """one of the following is required - except in the case of count queries"""
  fieldId: ID
  fieldName: String

  """optional if omitted outer query is used"""
  alias: String
  op: AggregateOp
}

type FieldValue {
  """Types"""
  ID: ID
  STRING: String
  INT: Int
  FLOAT: Float
  BOOLEAN: Boolean
  DATE: Date
  TIME: Time
  DATETIME: DateTime
  JSON: JSON
  KIND: ID

  """List forms"""
  l_ID: [ID]
  l_STRING: [String]
  l_INT: [Int]
  l_FLOAT: [Float]
  l_BOOLEAN: [Boolean]
  l_DATE: [Date]
  l_TIME: [Time]
  l_DATETIME: [DateTime]
  l_JSON: [JSON]
  l_KIND: [ID]
}

input FieldValueInput {
  """Types"""
  ID: ID
  STRING: String
  INT: Int
  FLOAT: Float
  BOOLEAN: Boolean
  DATE: Date
  TIME: Time
  DATETIME: DateTime
  JSON: JSON
  KIND: ID

  """List forms"""
  l_ID: [ID]
  l_STRING: [String]
  l_INT: [Int]
  l_FLOAT: [Float]
  l_BOOLEAN: [Boolean]
  l_DATE: [Date]
  l_TIME: [Time]
  l_DATETIME: [DateTime]
  l_JSON: [JSON]
  l_KIND: [ID]
}

type Info {
  id: ID!
  name: String!
  description: String
}

type InstanceSet {
  kindId: ID!

  """Continuation token"""
  token: String
  fieldIds: [ID]

  """rowKeys: [Int]"""
  records: [[FieldValue]]
}

scalar JSON

input KindQueryInput {
  """projected kind (one of the following is required)"""
  kindId: ID
  kindName: String
  serviceId: ID

  """optional alias for projection binding"""
  alias: String

  """projected fields"""
  projection: [FieldProjectionInput]

  """distinct Projected result"""
  distinct: Boolean

  """filters (where)"""
  fieldFilters: [FieldFilterInput]

  """conjunction (where)"""
  and: [KindQueryInput]

  """disjunction (where)"""
  or: [KindQueryInput]

  """join (if conjunction or disjunction)"""
  fromFieldId: ID
  fromFieldName: String
  toFieldId: ID
  toFieldName: String
  take: Int
  token: String
}

type Mutation {
  """Autogenerated mutation for adding single instance of UnitOfMeasure"""
  addUnitOfMeasure(input: AddUnitOfMeasureInput!): ID

  """Autogenerated mutation for adding multiple instances of UnitOfMeasure"""
  addUnitOfMeasures(input: [AddUnitOfMeasureInput]!): [ID]

  """Autogenerated mutation for updating single instance of UnitOfMeasure"""
  updateUnitOfMeasure(input: UpdateUnitOfMeasureInput!): ID

  """Autogenerated mutation for updating multiple instance of UnitOfMeasure"""
  updateUnitOfMeasures(input: [UpdateUnitOfMeasureInput]!): [ID]

  """Autogenerated mutation for deleting single instance of UnitOfMeasure"""
  deleteUnitOfMeasure(id: ID!): UnitOfMeasure

  """Autogenerated mutation for deleting multiple instance of UnitOfMeasure"""
  deleteUnitOfMeasures(ids: [ID!]): [UnitOfMeasure]
}

type Query {
  CKGErrors: [String]

  """All instances of UnitOfMeasure kind"""
  allUnitOfMeasures(
    """Number of results to return"""
    take: Int = 1000

    """Number of results to skip from the query result. Applied before take"""
    offset: Int = 0
  ): [UnitOfMeasure]

  """Get single instance of UnitOfMeasure kind by ID"""
  unitOfMeasure(id: ID!): UnitOfMeasure

  """Get list of instance of UnitOfMeasure kind by IDs"""
  unitOfMeasures(ids: [ID]!): [UnitOfMeasure]

  """Get instances of UnitOfMeasure kind based on one or more field filters"""
  unitOfMeasureFilter(
    filters: [FieldFilterInput]!

    """Number of results to return"""
    take: Int = 1000

    """Number of results to skip from the query result. Applied before take"""
    offset: Int = 0
  ): [UnitOfMeasure]

  """Mandatory service manifest."""
  info: Info!

  """Kind Query"""
  query(input: KindQueryInput!): InstanceSet
  queryJSON(input: KindQueryInput!): String
}

scalar Time

type UnitOfMeasure {
  """id"""
  id: ID!
  name: String
  displayAs: String
}

"""Autogenerated input for modifying instance of UnitOfMeasure"""
input UpdateUnitOfMeasureInput {
  """id"""
  id: ID!
  name: String
  displayAs: String
}
