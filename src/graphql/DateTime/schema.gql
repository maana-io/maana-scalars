type Query {
  # Identity
  dateTimeIdentity(x: DateTime!): DateTime!
  dateTimeIdentityOpt(x: DateTime): DateTime

  # NONULL coercion
  dateTimeCoerceFromOpt(x: DateTime): DateTime!
  dateTimeCoerceToOpt(x: DateTime!): DateTime

  # String de/serialization
  dateTimeParse(x: String!): DateTime!
  dateTimeToString(x: DateTime!): String!

  # Lists
  dateTimeListUnion(a: [DateTime!]!, b: [DateTime!]!): [DateTime!]!
  dateTimeListConcat(a: [DateTime!]!, b: [DateTime!]!): [DateTime!]!
  dateTimeListReverse(x: [DateTime!]!): [DateTime!]!
  dateTimeListUnique(x: [DateTime!]!): [DateTime!]!
  dateTimeListFilterNulls(x: [DateTime]): [DateTime!]!

  # Operations
}

type Mutation {
  dateTimeNow: DateTime!
}
